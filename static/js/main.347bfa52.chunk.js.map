{"version":3,"sources":["sounds sync //.(mp3)$","sounds/s1/s1_1.mp3","sounds/s2/s2_10.mp3","sounds/s3/s3_1.mp3","sounds/s3/s3_2.mp3","sounds/s4/s4_1.mp3","sounds/s5/sample_1-1.mp3","sounds/s5/sample_1-2.mp3","sounds/s5/sample_1-3.mp3","sounds/s5/sample_1-4.mp3","sounds/s5/sample_1-5.mp3","sounds/s6/sample_2-1.mp3","sounds/s6/sample_2-2.mp3","sounds/s6/sample_2-3.mp3","sounds/s6/sample_2-4.mp3","sounds/s6/sample_2-5.mp3","usages/socketUsage.js","usages/tool.js","components/InfoPage.js","components/Fade.js","usages/cssUsage.js","usages/voiceUsage.js","components/Speak.js","components/AnimeBox.js","components/MusicBox.js","components/EffectBox.js","components/SocketHandler.js","components/LandPage.js","components/App.js","serviceWorker.js","index.js","usages/colorUsage.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","defaultSocket","serverHost","defaultConnectFn","console","log","connectSocket","namespace","fn","socket","io","undefined","on","onSocket","str","emitData","name","data","emit","useInterval","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","usePrevious","value","ref","InfoSpan","styled","span","props","fontSize","fontWeight","color","InfoWrapper","div","Wave","myRef","React","createRef","state","siriWave","this","setState","SiriWave","container","style","width","height","speed","amplitude","autostart","setTimeout","setAmplitude","nextProps","nextState","start","Component","InfoPage","speaking","num","speakingVoice","length","forEach","v","JSON","parse","lang","personName","nameColor","sentence","Fade","show","children","useState","shouldRender","setRender","animation","onAnimationEnd","FullDiv","bgColor","excludeName","Set","SpeakForm","onSubmitF","voiceIndex","voiceOnChanged","voices","pitch","rate","pitchOnChanged","rateOnChanged","onSubmit","onChange","target","index","key","htmlFor","type","step","Speak","genVoice","synth","getVoices","prevName","i","has","splice","default","changeVoiceIdx","window","speechSynthesis","setVoices","setPitch","setRate","setSpeaking","toSpeak","changeVoice","prevSpeak","prevChangeVoice","revealSentence","setRevealSentence","text","speakTxtWithPR","Math","floor","random","changeVoiceCallback","onvoiceschanged","speakOver","speakTxt","txt","utterThis","SpeechSynthesisUtterance","voice","speak","p","r","formProps","event","preventDefault","form","nowSpeak","AnimeBox","defaultProp","easing","loop","duration","direction","endDelay","background","mode","opacity","refresh","light","alpha","colorTemp","loopTime","colorStr","stiffness","bg","substring","split","config","damping","spring","parseFloat","g","b","a","motionFunc","rgbMotion","Date","now","rgbToHsl","h","s","l","hslMotion","lightProp","computeData","animeProp","assign","genRgbStyle","motion","anime","soundStateNum","soundFiles","soundPlayer","context","require","count","prev","filename","slice","push","importSoundFiles","ind","temp","Tone","Player","toMaster","MusicBoxMin","nowOrder","setNowOrder","setRefresh","processData","sound","processSound","loadFinish","Buffer","stop","stopAll","stringify","order","set","orderTo","stopNow","setVolume","volume","playSound","delayFix","loaded","rgbColors","genUUID","d","performance","uuid","replace","c","toString","sessionStorage","setItem","jsonCopy","jsonObj","EffectBox","getItem","refreshAnime","refreshMusic","socketData","lightData","soundData","opa","setupBeforeUnloadListener","addEventListener","clickButton","prevState","receiveControlData","bind","handleSocketData","handleLightData","MusicBox","SocketHandler","setSpeak","setId","setChangeVoice","launch","setLaunch","showForm","setShowForm","speakData","setSpeakData","setVoice","socketConnect","setSocketConnect","setNowSpeak","changeVoiceEffect","LandPage","className","onClick","select","App","landing","setLanding","Synth","oscillator","triggerAttack","triggerRelease","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","hsvToRgb","f","q","t","rgbToHsv","max","min","hslToRgb","hue2rgb"],"mappings":"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","file":"static/js/main.347bfa52.chunk.js","sourcesContent":["var map = {\n\t\"./s1/s1_1.mp3\": 109,\n\t\"./s2/s2_10.mp3\": 110,\n\t\"./s3/s3_1.mp3\": 111,\n\t\"./s3/s3_2.mp3\": 112,\n\t\"./s4/s4_1.mp3\": 113,\n\t\"./s5/sample_1-1.mp3\": 114,\n\t\"./s5/sample_1-2.mp3\": 115,\n\t\"./s5/sample_1-3.mp3\": 116,\n\t\"./s5/sample_1-4.mp3\": 117,\n\t\"./s5/sample_1-5.mp3\": 118,\n\t\"./s6/sample_2-1.mp3\": 119,\n\t\"./s6/sample_2-2.mp3\": 120,\n\t\"./s6/sample_2-3.mp3\": 121,\n\t\"./s6/sample_2-4.mp3\": 122,\n\t\"./s6/sample_2-5.mp3\": 123\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 108;","module.exports = __webpack_public_path__ + \"static/media/s1_1.ea669680.mp3\";","module.exports = __webpack_public_path__ + \"static/media/s2_10.32934c47.mp3\";","module.exports = __webpack_public_path__ + \"static/media/s3_1.7211e581.mp3\";","module.exports = __webpack_public_path__ + \"static/media/s3_2.7cf882bb.mp3\";","module.exports = __webpack_public_path__ + \"static/media/s4_1.0392c9c6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sample_1-1.13028553.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sample_1-2.7650b135.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sample_1-3.8790d909.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sample_1-4.f9bb29ba.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sample_1-5.342b425b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sample_2-1.a54a1452.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sample_2-2.91e0a60f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sample_2-3.cbac8904.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sample_2-4.563c08ed.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sample_2-5.6922cc24.mp3\";","import io from 'socket.io-client'\n//import {serverHost} from './config'\nconst serverHost = 'https://stage-effect-server1.herokuapp.com';\nlet defaultSocket;\nlet isSocketConnect = false;\n\nlet defaultConnectFn = () => {\n    isSocketConnect = true;\n    console.log('socket connect to server');\n}\n\n/**\n * set default socket for later use.\n *\n * @param   Socket  socket\n */\nexport let setDefaultSocket = (socket)=> {\n    defaultSocket = socket;\n}\n\n/**\n * connect socket with namespace, execute fn function after connect.\n *\n * @param   String  namespace     The namespace of socket io\n * @param   Function  fn          The function to be execute after connection\n * @return  Socket                The willing connect socket;\n */\nexport let connectSocket = (namespace='', fn=defaultConnectFn)=> {\n\n    let socket = io(serverHost+namespace);\n    if (defaultSocket === undefined) defaultSocket = socket;\n    socket.on('connect', fn);\n    return socket;\n}\n\n/**\n * on\n *\n * @param   String      str          The namespace of socket io\n * @param   Function    fn          The function to be execute after connection\n * @return  Socket                  The willing connect socket;\n */\nexport let onSocket = (str, fn, socket=defaultSocket)=> {\n    if (defaultSocket === undefined) return;\n    socket.on(str, fn);\n}\n\n/**\n * Emit Socket with name 'osc'\n *\n * @param   String  address     The specified address string\n * @param   Json  value         The values in JSON format\n */\nexport let emitOSC = (address, value, socket=defaultSocket)=> {\n    socket.emit('osc', {\n        address: address,\n        args: [value]\n    });\n}\n\n/**\n * Emit Socket with name and data\n *\n * @param   String  name     The name for socket emit\n * @param   Json  data       The emit data in JSON format\n */\nexport let emitData = (name, data, socket=defaultSocket)=> {\n    socket.emit(name, data);\n}\n\nexport {isSocketConnect};","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n  \n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n  \n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}","import React from 'react';\nimport styled from 'styled-components';\nimport SiriWave from 'siriwave';\nimport '../css/InfoPage.css';\n\n// css styled component\nconst InfoSpan = styled.span`\n    margin: 1em;\n    width: 80%;\n    text-align: center;\n    min-height: 1.2em;\n    font-size: ${props => \n        props.fontSize === undefined ? '3em' : props.fontSize};\n    font-weight: ${props => \n        props.fontWeight === undefined ? '200' : props.fontWeight};\n    ${props => \n        props.color === undefined ? '' : 'color:'+props.color+';'}\n    `;\nconst InfoWrapper = styled.div`\n    margin: 0 auto;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    `;\n\n\nfunction InfoPage(props) {\n    const maxLen = 10;\n    let speaking = '';\n    let num = 0;\n    if (props.speakingVoice.length > 0) {\n        props.speakingVoice.forEach((v)=>{\n            if (v == null) return;\n            v = JSON.parse(v);\n            if (!v.name) return;\n            if (num > maxLen) {\n                return;\n            }\n            if (`${v.name} (${v.lang})` !== props.personName) {\n                num++;\n                if (num > 1) speaking += num == maxLen ? ' and ' : ', ';\n                speaking += v.name;\n            }\n        })\n        if (num > 0) {\n            speaking += num > 1 ? ' are ' : ' is ';\n            speaking += 'speaking...';\n        }\n    }\n    \n    return (\n    <InfoWrapper>\n        <InfoSpan color={props.nameColor}>{props.personName}</InfoSpan>\n        <InfoSpan color={'purple'} fontSize={'2em'} fontWeight={'300'}>\n            {props.sentence === '' ? '' : `\"${props.sentence}\"`}\n        </InfoSpan>\n        <InfoSpan color={'gray'} fontSize={'1.5em'}>{speaking}</InfoSpan>\n        <Wave start={props.sentence === '' ? false : true}/>\n    </InfoWrapper>);\n}\n\nclass Wave extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n        this.state = {\n            siriWave: null,\n        };\n    }\n\n    componentDidMount() {\n        this.setState({siriWave:new SiriWave({\n            container: this.myRef.current,\n            style: 'ios9',\n            width: 320,\n            height: 100,\n            //cover: true,\n            speed: 0.2,\n            amplitude: 0.1,\n            autostart: true\n        })})\n        setTimeout(()=>{\n            if (this.state.siriWave)\n                this.state.siriWave.setAmplitude(0);\n        }, 50)\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.state.siriWave == null) return false;\n        if (nextProps.start !== this.props.start) {\n            if (nextProps.start) this.state.siriWave.setAmplitude(1);\n            else this.state.siriWave.setAmplitude(0);\n            return true;\n        }\n        return false;\n    }\n\n    render() {\n        return (<>\n            <div ref={this.myRef}></div>\n        </>);\n    }\n  }\n\nexport default InfoPage;\n","import React, { useEffect, useState } from \"react\";\n\nconst Fade = ({ show, speed, children }) => {\n    if (speed === undefined) speed = \"0.5s\";\n    const [shouldRender, setRender] = useState(show);\n\n    useEffect(() => {\n        if (show) setRender(true);\n    }, [show]);\n\n    const onAnimationEnd = () => {\n        if (!show) setRender(false);\n    };\n\n    return (\n        shouldRender && (\n        <div\n            style={{ animation: `${show ? \"fadeIn\" : \"fadeOut\"} ${speed}` }}\n            onAnimationEnd={onAnimationEnd}\n        >\n            {children}\n        </div>\n        )\n    );\n};\n\nexport default Fade;","import styled from 'styled-components'\n\nexport const FullDiv = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  display:flex;\n  justify-content: center;\n  align-items: center;\n  z-index: -10;\n  background: ${props => \n    props.bgColor === undefined ? \"white\" : props.bgColor};  \n`;","export let excludeName = new Set([\n    'Amelie', 'Ioana', 'Joana', 'Laura', 'Sara', 'Xander', 'Jorge', 'Diego', 'Satu', 'Alice', 'Luciana', 'Mariska',\n]);\n\nexport let excludeLang = new Set([\n    'fr-CA', 'ro-RO', 'pt-PT', 'sk-SK', 'da-DK', 'nl-NL'\n]);","import React, {useState, useEffect} from 'react';\nimport { useInterval, usePrevious } from '../usages/tool';\nimport InfoPage from './InfoPage';\nimport Fade from './Fade';\nimport {FullDiv} from '../usages/cssUsage';\nimport {excludeName} from '../usages/voiceUsage';\n\n\nfunction Speak(props) {\n  let genVoice = () => {\n    let v = synth.getVoices();\n    let prevName = '';\n    console.log(v.length);\n    for (var i=0; i<v.length; i++) {\n      while (i<v.length && (excludeName.has(v[i].name) || v[i].name === prevName)) v.splice(i, 1);\n      if (i < v.length) {\n        prevName = v[i].name;\n        if (v[i].default) changeVoiceIdx(i);\n      }\n    }\n    return v;\n  }\n\n  const synth = window.speechSynthesis;  \n  const [voiceIndex, changeVoiceIdx] = useState(0);\n  const [voices, setVoices] = useState(()=>{return genVoice();});\n  const [pitch, setPitch] = useState(1);\n  const [rate, setRate] = useState(1);\n  const [speaking, setSpeaking] = useState(false);\n\n  //const [sentence, setSentence] = useState('');\n  const {toSpeak, data, changeVoice} = props;\n  const prevSpeak = usePrevious(toSpeak);\n  const prevChangeVoice = usePrevious(changeVoice);\n  const [revealSentence, setRevealSentence] = useState('');\n\n  useEffect(()=>{\n    if (!toSpeak || speaking) return;\n    if (prevSpeak !== toSpeak && data.text) {\n      if (data.rate) setRate(data.rate);\n      if (data.pitch) setPitch(data.pitch);\n      //speakTxt(data.text);\n      speakTxtWithPR(data.text, data.pitch?data.pitch:pitch, data.rate?data.rate:rate);\n    }\n  }, [toSpeak, data]);\n\n  useEffect(()=>{\n    if (prevChangeVoice !== changeVoice) {\n      changeVoiceIdx(Math.floor(Math.random()*voices.length));\n    }\n  }, [changeVoice]);\n\n  useEffect(()=>{\n    props.changeVoiceCallback({name:voices[voiceIndex].name, lang:voices[voiceIndex].lang});\n  }, [voiceIndex]);\n\n  let populateVoice = () => {\n    setVoices(genVoice());\n  }\n  synth.onvoiceschanged = populateVoice;\n  useInterval(() => {\n    if (!synth.speaking) {\n        //console.log('finish speak!');\n        props.speakOver();\n        setSpeaking(false);\n        setRevealSentence(\"\");\n    }\n  }, speaking ? 100 : null);\n\n  let submitSpeak = (event) => {\n    event.preventDefault();\n    speakTxt('hello');\n  }\n\n  let speakTxt = (txt) => {\n    setSpeaking(true);\n    setRevealSentence(txt);\n    let utterThis = new SpeechSynthesisUtterance(txt);\n    utterThis.voice = voices[voiceIndex];\n    utterThis.pitch = pitch;\n    utterThis.rate = rate;\n    synth.speak(utterThis);\n  }\n\n  let speakTxtWithPR = (txt, p, r) => {\n    setSpeaking(true);\n    setRevealSentence(txt);\n    let utterThis = new SpeechSynthesisUtterance(txt);\n    utterThis.voice = voices[voiceIndex];\n    utterThis.pitch = p;\n    utterThis.rate = r;\n    synth.speak(utterThis);\n  }\n\n  const formProps = {\n    onSubmitF: submitSpeak,\n    voiceIndex: voiceIndex, \n    voiceOnChanged: changeVoiceIdx, \n    voices: voices, \n    pitch: pitch, \n    rate: rate, \n    pitchOnChanged: setPitch, \n    rateOnChanged: setRate\n  }\n\n  let personName = voices[voiceIndex] !== undefined ? \n        `${voices[voiceIndex].name} (${voices[voiceIndex].lang})` : '';\n\n  return (\n    <>\n      {props.form && <SpeakForm {...formProps}/>}\n      <InfoPage personName={personName} \n        sentence={revealSentence} speakingVoice={props.nowSpeak} nameColor={speaking ? 'black': 'white'} /> \n      <Fade show={speaking} speed={'0.3s'}>\n        <FullDiv/>\n      </Fade>\n    </>\n  );\n}\n\nfunction SpeakForm(props) {\n  const {onSubmitF, voiceIndex, \n        voiceOnChanged, voices, pitch, rate, \n        pitchOnChanged, rateOnChanged} = props;\n  return (\n    <form onSubmit={onSubmitF}>\n      <select value={voiceIndex} onChange={(e) => {voiceOnChanged(e.target.value)}}>\n        {voices.map((value, index) => {\n          return <option key={index} value={index}>{`${value.name} (${value.lang})`}</option>\n        })}\n      </select>\n      <br/>\n      <label htmlFor='pitch'>pitch</label>\n      <input type='number' step={0.01} value={pitch} onChange={(e)=>{pitchOnChanged(e.target.value)}} id='pitch' />\n      <br/>\n      <label htmlFor='rate'>rate</label>\n      <input type='number' step={0.01} value={rate}  onChange={(e)=>{rateOnChanged(e.target.value)}} id='rate'/>\n      <input type='submit'></input>\n    </form>\n  )\n}\n\nexport default Speak;\n","import React, {Component} from \"react\";\nimport Anime from \"react-anime\";\nimport { Motion, spring} from \"react-motion\";\nimport {rgbToHsl} from \"../usages/colorUsage\";\nimport '../css/AnimeBox.css';\nimport styled from 'styled-components';\n\nconst LightBox = styled.div `\n\tbackground: rgba(0,0,0,1);\n\tposition: absolute;\n\tmargin: 0;\n\ttop: 0px;\n\tleft: 0px;\n\twidth: 100%;\n\theight: 100%;\n\tz-index: -1;\n`;\n\nclass AnimeBox extends Component {\n\n\tstate = {\n\t\tdefaultProp : {\n\t\t\teasing: \"easeInOutQuad\",\n\t\t\tloop: 2,\n\t\t\tduration: 500,\n\t\t\tdirection: \"alternate\",\n\t\t\tdelay: 0,\n\t\t\tendDelay: 0,\n\t\t\tbackground: \"rgba(0,0,0,1)\"\n\t\t}\n\t}\n\n\tshouldComponentUpdate(nextProps, nextState) {\n\t\t// only render when refresh animation\n\t\t// if (\"mode\" in nextProps.data){\n\t\t// \tif (nextProps.data.mode == \"follow\" \n\t\t// \t\t\n\t\t// }\n\t\tif (nextProps.data.mode == \"follow\"\n\t\t\t&& nextProps.opacity != this.props.opacity) {\n\n\t\t\treturn true;\n\t\t}\n\t\treturn (nextProps.refresh !== this.props.refresh);\n\t}\n\n\tcomputeData(light) {\n\t\t//TODO: check if QQ?\n\t\t//TODO: if first time is follw: QQ?\n\n\t\tlet alpha = 0;\n\t\t//console.log(`<background ?> ${JSON.stringify(light)}`);\n\t\tif (\"color\" in light) {\n\t\t\tlight.colorTemp = light.color;\n\t\t}\n\t\tif (\"alpha\" in light) {\n\t\t\talpha = light.alpha;\n\t\t} \n\t\tif (light.mode == \"follow\"){\n\t\t\talpha = this.props.opacity;\n\t\t}\n\n\t\tif (!(\"background\" in light)) {\n\t\t\tlight.direction = light.mode == \"blink\" ? \"alternate\" : \"normal\";\n\t\t\tlight.loop = light.mode == \"light\" ? light.loopTime : light.loopTime*2;\n\t\t}\n\t\tlight.background = `rgba(${light.colorTemp},${alpha})`;\n\t\t//console.log(light.background);\n\t\t//TODO: if mode == follow\n\n\t\t//delete light.mode;\n\t\tdelete light.loopTime;\n\t\tdelete light.color;\n\t\tdelete light.alpha;\n\t\t\n\t\treturn light;\n\t}\n\n\tgenRgbStyle(colorStr, stiffness) {\n\t\tlet bg = colorStr;\n\t  \tlet bgColor = bg.substring(5, bg.length-1).split(\",\");\n\t  \tconst config = {stiffness: stiffness, damping: 30}; // 70, 20\n\t  \treturn {\n\t  \t\tstyle: {\n\t\t  \t\tr: spring(parseFloat(bgColor[0]),config),\n\t\t  \t\tg: spring(parseFloat(bgColor[1]),config),\n\t\t  \t\tb: spring(parseFloat(bgColor[2]),config),\n\t\t  \t\ta: spring(parseFloat(bgColor[3]),config),\n\t\t  \t}, \n\t\t  \tmotionFunc: this.rgbMotion\n\t\t  }\n\t  \t\n\t}\n\n\trgbMotion({r, g, b, a}) {\n    \t//console.log(r,g,b,a);\n        return (\n        \t<div id=\"lightBox\" key={Date.now()}\n\t          style={{\n\t            background:`rgba(${Math.floor(r)},${Math.floor(g)},${Math.floor(b)},${a})`\n\t          }}>\n          </div>);\n    }\n\n\tgenHslStyle(colorStr) {\n\t\tlet bg = colorStr;\n\t  \tlet bgColor = bg.substring(5, bg.length-1).split(\",\");\n\t  \tconst config = {stiffness: 80, damping: 20};\n\t\tlet {h,s,l} = rgbToHsl(parseFloat(bgColor[0]), parseFloat(bgColor[1]), parseFloat(bgColor[2]));\n\t  \treturn {\n\t  \t\tstyle: {\n\t\t  \t\th: spring(h,config),\n\t\t  \t\ts: spring(s,config),\n\t\t  \t\tl: spring(l,config),\n\t\t  \t\ta: spring(parseFloat(bgColor[3]),config),\n\t\t  \t},\n\t\t  \tmotionFunc: this.hslMotion\n\t\t}\n\t  \t//console.log(hslStyle);\n\t}\n\n\thslMotion({h, s, l, a}) {\n    \t//console.log(h,s,l,a);\n        return (\n        \t<div id=\"lightBox\" key={Date.now()}\n\t       \n\t          style={{\n\t            background:`hsla(${h*360},${s*100}%,${l*100}%,${a})`\n\t          }}>\n          </div>);\n    }\n\n\trender () {\n\t\t//console.log(`<render> animBOX`);\n\t\tlet {defaultProp} = this.state;\n\t\t\n\t\tlet lightProp = this.computeData(this.props.data);\n\t\tlet animeProp = Object.assign(defaultProp, lightProp);\n\t\t//console.log(`<render animebox> ${JSON.stringify(animeProp)}`);\n\t\t\n\t\t//TODO: change rgb type\n\t\t//animeProp.background\n\t\tlet {style, motionFunc} = this.genRgbStyle(animeProp.background, animeProp.duration);\n\t\t//let {style, motionFunc} = this.genHslStyle(this.props.opa);\n\t\t//console.log(animeProp.duration);\n\t  \tlet motion = (\n\t  \t\t<Motion style={style}>\n\t  \t\t\t{motionFunc}\n        \t</Motion>);\n\t  \t\n\t  \tlet anime = (\n\t\t\t<Anime key={Date.now()} {...animeProp}>\n\t\t        <div id=\"lightBox\"></div>\n      \t\t</Anime>);\n\n\t  \t//return motion;\n\t  \t//console.log(animeProp.mode == \"blink\"? \"anime\" : \"motion\")\n\t  \treturn animeProp.mode == \"blink\"? anime : motion;\n\t  \t\t\n\t}\n\n}\n\nconst colorInterpolate = (startValue, endValue, percentage) => {\n\treturn (endValue - startValue) * percentage + startValue;\n}\n\nexport default AnimeBox;","import React, {useState, useEffect} from 'react';\nimport {onSocket} from '../usages/socketUsage';\nimport Tone from 'tone';\nimport AnimeBox from './AnimeBox';\n\nlet soundStateNum = [];\nlet soundFiles = [];\nlet soundPlayer = [];\nconst importSoundFiles = () => {\n    let context = require.context(`../sounds/`, true, /\\.(mp3)$/);\n    let count = 0;\n    let prev = '';\n    context.keys().forEach((filename)=>{\n        //console.log(context(filename), count);\n        if (filename.slice(0,4) !== prev) {\n            prev = filename.slice(0,4);\n            soundStateNum.push(count);\n        }\n        count ++;\n        soundFiles.push(context(filename));\n    });\n    soundStateNum.push(count);\n    console.log(soundStateNum);\n}\nconst soundPreload = () => {\n\tconsole.log('soundPreload', soundStateNum[soundStateNum.length-2]);\n\t//var meter = new Tone.Meter('level');\n\t//var fft = new Tone.Analyser('fft', 64);\n\t//var waveform = new Tone.Analyser('waveform', 32);\n\t//var soundPlayer = [];\n    soundFiles.forEach((value, ind)=> {\n        var temp = new Tone.Player({\n\t\t\t\"url\": value,\n\t\t\t\"fadeOut\": ind < soundStateNum[4] ? 5 : 0,\n            \"fadeIn\": ind < soundStateNum[4] ? 5 : 0\n        }).toMaster();\n\t\t\t//}).connect(meter).connect(waveform).connect(fft).toMaster();\n\t\tsoundPlayer.push(temp);\n    });\n    return soundPlayer;\n\t//return {meter: meter, fft: fft, waveform: waveform, soundPlayer:soundPlayer};\n}\nimportSoundFiles();\nsoundPreload();\n\nfunction MusicBoxMin(props) {\n    //const [soundPlayer] = useState(soundPreload());\n    const [nowOrder, setNowOrder] = useState(0);\n    const [refresh, setRefresh] = useState(false);\n    \n    let processData = (data) => {\n        //let {sound} = data;\n        if (data.sound) processSound(data.sound);\n    }\n    useState(()=>{\n        if (props.socket)\n            onSocket('controlData', processData);\n    })\n    \n    let loadFinish = () => {\n\t\tconsole.log('load Finished!');\n    }\n    //TODO: handle loading?\n    useEffect(()=>{\n        Tone.Buffer.on('load', loadFinish);\n    },[soundPlayer])\n\n    useEffect(()=>{\n        if (props.stop) {\n            stopAll();\n        }\n    },[props.stop])\n\n    useEffect(()=>{\n        if (props.refresh != refresh && props.data && JSON.stringify(props.data) !== '{}' ){\n            processSound(props.data);\n        }\n        setRefresh(props.refresh);\n    }, [props.refresh])\n\n    let processSound = (data) => {\n        if (props.stop) return;\n\n        //console.log(data);\n        if (data.stop && data.stop !== '*') {\n            stopAll();\n            return;\n        }\n        let order = -1;\n        if (data.set && data.set < soundStateNum.length) {\n            order = Math.floor(Math.random() * (soundStateNum[data.set] - soundStateNum[data.set-1]));\n            order += soundStateNum[data.set-1];\n        } else if ('order' in data) {\n            if (data.orderTo && data.orderTo > data.order) {\n                order = Math.floor(Math.random() * (data.orderTo - data.order));\n                order += data.order;\n            } else order = data.order;\n        }\n        if (order >= 0) {\n            stopNow();\n            //console.log('o', order);\n            if ('volume' in data) setVolume(order, data.volume);\n            if ('delayFix' in data) {\n                setTimeout(() => {\n                    playSound(order);\n                }, data.delayFix);\n            } else if (data.delay > 0) {\n                setTimeout(() => {\n                    playSound(order);\n                }, Math.floor(Math.random()*data.delay));\n            } else playSound(order);\n        }   \n        else if ('volume' in data) {\n            if (soundPlayer[nowOrder] && soundPlayer[nowOrder].state !== 'stopped') {\n                setVolume(nowOrder, data.volume);\n            }\n        }\n    }\n\n    let stopNow = () => {\n        if (soundPlayer[nowOrder] && soundPlayer[nowOrder].loaded && soundPlayer[nowOrder].state !== 'stopped') {\n            soundPlayer[nowOrder].stop();\n        }\n    }\n\n    let stopAll = () => {\n\t\tsoundPlayer.forEach((e) => {\n\t\t\tif (e !== undefined) {\n\t\t\t\tif (e.loaded && e.state !== 'stopped') e.stop();\n\t\t\t} \n        }) \n        setNowOrder(0);\n    }\n    \n    let playSound = (order) => {\n        //console.log(order);\n\t\tif (soundPlayer[order] !== undefined) {\n\t\t\tif (soundPlayer[order].loaded) {\n                console.log(order, 'played!');\n                soundPlayer[order].start();\n                setNowOrder(order);\n\t\t\t} else {\n\t\t\t\tconsole.log(order+' not loaded!');\n\t\t\t}\n\t\t}\n    }\n    let setVolume = (order, volume) =>{\n        if (soundPlayer[order] && soundPlayer[order].loaded) soundPlayer[order].volume.value = volume;\n    }\n    \n    let randomPlay = () => {\n        let order = Math.floor(Math.random() * (soundStateNum[1] - soundStateNum[0]));\n            order += soundStateNum[0];\n        playSound(order);\n    }\n\n    return(<></>);\n}\n\nexport default MusicBoxMin;","import React, {Component} from 'react';\nimport AnimeBox from './AnimeBox';\n// import MusicBox from './MusicBox';\nimport {connectSocket, onSocket} from '../usages/socketUsage';\nimport Fade from './Fade';\nimport MusicBoxMin from './MusicBox';\n\nconst rgbColors = [\"255, 255, 255\"];\n\nconst inArrRange = (num, len) => {\n\t//console.log(num >= 0 && num < len);\n\treturn num >= 0 && num < len;\n}\n\nconst genUUID = () => {\n\tvar d = Date.now();\n    if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n        d += performance.now(); //use high-precision timer if available\n    }\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : ((r & 0x3) | 0x8)).toString(16);\n    });\n    sessionStorage.setItem(\"StageEffectUUID\", uuid);\n    return uuid;\n}\n\nconst jsonCopy = (jsonObj) => {\n  return JSON.parse(JSON.stringify(jsonObj));\n}\n\n//props: show, stop\nclass EffectBox extends Component {\n\n\tstate = {\n    \tuuid: sessionStorage.getItem(\"StageEffectUUID\") || genUUID(),\n        refreshAnime: false,\n        refreshMusic: false,\n        socketData: {},\n        lightData: {},\n        soundData: {},\n        //opa: \"rgba(0,0,0,1)\",\n        opa: -1,\n        opacity: 0,\n    };\n\n    componentDidMount() {\n\n        // this.setState({\n\t\t// \tsocket: connectSocket('/receiver', this.socketConnectFn)\n        // })\n        onSocket('controlData', this.receiveControlData.bind(this))\n        \n\t}\n\t\n\t// socketConnectFn = () => {\n\t// \tlet {socket} = this.state;\n\t// \tconsole.log('receiver connected to server');\n\t// \tconsole.log(this.state.uuid);\n\t// \tconsole.log(socket);\n\t// \tsocket.emit('connected', {\n\t// \t\tuuid: this.state.uuid\n\t// \t});\n\n\t// \t //this.setupBeforeUnloadListener(socket);\n\t// \tthis.setState({socketID: socket.id});\n\t// \t socket.on('debug', (data) => {\n\t// \t\t console.log(`<socket> ${data}`);\n\t// \t })\n\n\t// \tsocket.on('controlData', this.receiveControlData.bind(this));\n\t\t\n\t// }\n\n    receiveControlData(data) {\n \t\t// console.log(`<data> ${JSON.stringify(data)}`);\n \t\t\n \t\tlet {light, sound} = this.handleSocketData(data);\n \t\t//console.log(`<sound data>  ${JSON.stringify(sound)}`)\n \t\tif (JSON.stringify(sound) !== \"{}\") {\n \t\t\tthis.setState((prevState) => ({\n\t \t\t\tsoundData: jsonCopy(sound),\n\t \t\t\trefreshMusic: !prevState.refreshMusic,\n\t\t\t}));\n \t\t}\n \t\tif (JSON.stringify(light) !== \"{}\") {\n \t\t\tthis.setState((prevState) => ({\n \t\t\t\tsoundData: jsonCopy(sound),\n\t \t\t\tlightData: jsonCopy(light),\n\t \t\t\trefreshAnime: !prevState.refreshAnime,\n\t\t\t\t\n\t\t\t}));\n \t\t}\n    }\n\n    handleSocketData(data) {\n    \t//console.log(rgbColors);\n    \tvar sound = 'sound' in data && data.sound !== '*' ? data.sound : {};\n        var light = 'light' in data && data.light !== '*'? this.handleLightData(data.light) : {};\n    \t \n    \t//console.log(`<sound in handleSocketData> ${JSON.stringify(sound)}`);\n    \t//console.log(`<light> ${JSON.stringify(light)}`);\n\n    \tif (!(\"color\" in light) && JSON.stringify(light) !== \"{}\" && \"order\" in sound) {\n    \t\t//console.log(`color: ${rgbColors[sound.order % rgbColors.length]}`);\n    \t\tlight.color = rgbColors[sound.order % rgbColors.length];\n    \t}\n    \tif (\"color\" in light && \"order\" in sound) {\n    \t\tif (light.color === \"*\") {\n    \t\t\t//console.log(`color: ${rgbColors[sound.order % rgbColors.length]}`);\n    \t\t\tlight.color = rgbColors[sound.order % rgbColors.length];\n    \t\t}\n    \t}\n    \tif (\"delay\" in light && \"order\" in sound) {\n    \t\tsound.delayFix = light.delay;\n\n    \t}\n    \tif (\"mode\" in light && \"order\" in sound) {\n    \t\tsound.mode = light.mode;\n\n    \t}\n    \tif (\"mode\" in light && \"stop\" in sound) {\n    \t\tif (light.mode === \"follow\") light = {};\n    \t}\n    \t// TODO: if color mode == follow ? \n\n    \treturn {light: light, sound: sound};\n    }\n\n    // handleSoundData(sound) {\n    // \t//if order not in range => no sound!\n    // \t//console.log(`<handleSoundData> ${sound.order}`);\n\n    // \tif (!inArrRange(sound.order, soundFileNum)) {\n    // \t\tif (!('volume' in sound))\n    // \t\t\treturn {};\n    // \t\telse {\n    // \t\t\tdelete sound.order;\n    // \t\t\treturn sound;\n    // \t\t}\n    // \t}\n\n    // \t// if orderTo not in range or < order: to order\n    // \tif (!inArrRange(sound.orderTo, soundFileNum+1) \n    // \t\t|| sound.orderTo < sound.order) {\n\t// \t\tsound.orderTo = sound.order;\n\t// \t}\n\t\t\n    // \t//calculate random\n\t//     sound.order = sound.order + \n\t//     \t\tMath.floor(Math.random()*(sound.orderTo-sound.order));\n\t//     //console.log(`order ${sound.order}`); \n\n\t//     if (\"stop\" in sound) {\n    // \t\tif (sound.stop === \"*\") delete sound.stop;\n    // \t}\n\t//     return sound;\n    // }\n\n    handleLightData(light) {\n    \tif (light.mode === \"none\") return {};\n    \tif (\"color\" in light) {\n    \t\tif (light.color === \"*\") delete light.color;\n    \t}\n    \tlight.delay = Math.random()*light.delay;\n    \treturn light;\n    }\n\n    changeHandler(v) {\n    \t//console.log(`changeHandler: ${v}`);\n    \tthis.setState({opacity: v});\n    }\n\n\trender(){\n\t\t//console.log('render');\n\t\tlet {refreshAnime, refreshMusic, lightData, soundData, opacity} = this.state;\n\n\t\treturn(\n\t\t\t<div id=\"wrap\">\n\t\t\t\t<Fade show={this.props.show}>\n\t\t\t\t\t<AnimeBox refresh={refreshAnime} data={lightData} \n\t\t\t\t\topacity={opacity}></AnimeBox>\n\t\t\t\t</Fade>\n                <MusicBoxMin stop={this.props.stop} refresh={refreshMusic} data={soundData}/>\n\t\t\t\t{/* <MusicBox show={this.props.show} refresh={refreshMusic} data={soundData} onChange={this.changeHandler.bind(this)} parent={this}></MusicBox> */}\n\t\t\t</div>\n\t\t);\n\t}\n\n\tsetupBeforeUnloadListener = (socket) => {\n        window.addEventListener(\"beforeunload\", (event) => {\n            event.preventDefault();\n            socket.emit('disconnected', {\n\t\t        uuid: this.state.uuid\n\t    \t})\n\t    \treturn event;\n        });\n    };\n\n    clickButton = () => {\n    \t//console.log(`click ${this.state.refreshAnime}`);\n    \t//var r = Math.floor(Math.random()*255);\n    \t//var g = Math.floor(Math.random()*255);\n    \t//var b = Math.floor(Math.random()*255);\n    \t//testPlayer[0].start();\n    \tif (JSON.stringify(this.state.soundData) != \"{}\") {\n    \t\tthis.setState((prevState) => ({\n\t\t\t\trefreshMusic: !prevState.refreshMusic,\n\t\t\t}));\n    \t}\n    \tif (JSON.stringify(this.state.lightData) != \"{}\") {\n    \t\tthis.setState((prevState) => ({\n\t\t\t\trefreshAnime: !prevState.refreshAnime,\n\t\t\t}));\n    \t}\n  //   \tthis.setState((prevState) => ({\n\t\t// \trefreshAnime: !prevState.refreshAnime,\n\t\t// \trefreshMusic: !prevState.refreshMusic,\n\t\t// \t//opa: `rgba(${r},${b},${b},1)`\n\t\t// \t//opa: `rgba(255,255,0,1)`\n\t\t// \topa: prevState.opa*10\n\t\t// }));\n\t\t//console.log(rgbColors);\n    }\n}\n\nexport default EffectBox;\n","import React, {useState, useEffect} from 'react';\nimport {connectSocket, onSocket, emitData } from '../usages/socketUsage';\nimport Speak from './Speak';\nimport {useInterval} from '../usages/tool';\nimport Fade from './Fade';\nimport {FullDiv} from '../usages/cssUsage';\nimport MusicBoxMin from './MusicBox';\nimport EffectBox from './EffectBox';\n\n\nfunction SocketHandler(props) {\n    const [speak, setSpeak] = useState(false);\n    const [id, setId] = useState(-1);\n    const [changeVoice, setChangeVoice] = useState(false);\n    const [launch, setLaunch] = useState(false);\n    const [showForm, setShowForm] = useState(false);\n    const [speakData, setSpeakData] = useState({});\n    const [voice, setVoice] = useState(); \n    const [socketConnect, setSocketConnect] = useState(null);\n    const [nowSpeak, setNowSpeak] = useState([]);\n\n    useEffect(()=>{\n        //if (props.start && socketConnect) {\n        if (socketConnect) {\n            changeVoiceEffect();\n        }\n    }, [socketConnect])\n\n    //check if user changed\n    useEffect(() => {\n        if (!launch && voice) {\n            console.log('emit voice!');\n            emitData('speakConfig', {mode: 'changeVoice', voice: voice});\n        }\n    }, [launch, voice])\n\n    useState(()=> {\n        connectSocket('/receiver', ()=>{setSocketConnect(true);});\n        onSocket('disconnect', ()=>{\n            setSocketConnect(false);\n        })\n        onSocket('debug', (data)=> {\n            console.log(data);\n            if (data.mode === 'showForm') \n                setShowForm(data.value);\n        }); \n        onSocket('speak', (data)=> {\n            \n            if (!speak) {\n                console.log('speak!', data);\n                //setSentence(data.text);\n                setSpeakData(data);\n                setId(data.id);\n                setSpeak(true);\n            }\n            //TODO: if speak -> do something?   \n        });\n        onSocket('speakConfig', (data)=> {\n            console.log(data);\n            if (data.mode === 'changeVoice') \n                changeVoiceEffect();\n            else if (data.mode === 'showForm')\n                setShowForm(true);\n            else if (data.mode === 'hideForm') \n                setShowForm(false);\n            else if (data.mode === 'nowSpeak')\n                setNowSpeak(data.data);\n        }); \n        \n    });\n\n    useInterval(() => {\n        setChangeVoice(!changeVoice);\n    }, launch ? 100 : null);\n\n    let changeVoiceEffect = () => {\n        setLaunch(true);\n        setTimeout(()=>{\n            setLaunch(false);\n        }, 2000);\n    }\n\n    let sendDebug = () => {\n        emitData('debug', 'testing');\n    }\n    let sendChangeVoice = () => {\n        console.log('send change voice');\n        setChangeVoice(!changeVoice);\n    }\n    let speakOver = () => {\n        setSpeak(false);\n        console.log('speak over', id);\n        //emitData('debug', {id: id});\n        if (id !== -1)\n            emitData('speakOver', {id: id, voice: voice});\n    }\n    let changeVoiceCallback = (voice) => {\n        setVoice(voice);\n    }\n    \n    return (<>\n        {/* <button onClick={t}></button> */}\n        {/* <EffectBox controlData={controlData}/> */}\n        {/* <MusicBoxMin stop={speak}/> */}\n        <EffectBox show={socketConnect && !speak} stop={speak} />\n        <Fade show={socketConnect}>\n            <Speak toSpeak={speak} data={speakData} speakOver={speakOver} \n                    changeVoice={changeVoice} changeVoiceCallback={changeVoiceCallback}\n                    nowSpeak={nowSpeak} form={showForm}/>\n        </Fade>\n        <Fade show={socketConnect===false}>\n            <FullDiv bgColor=\"black\"><span>{'CONNECTING SERVER'}</span></FullDiv>\n        </Fade>\n        \n    </>);\n}\n\nexport default SocketHandler;","import React from 'react';\nimport '../css/LandPage.css';\n//import ReactHtmlParser from 'react-html-parser'; \n\nfunction LandPage(props) {\n    return (\n        <div id='LandpageWrapper'>\n            <button className='selectBtn' onClick={props.select}>Start</button>\n        </div>\n    );\n}\n\nexport default LandPage;","import React, {useState} from 'react';\nimport '../css/App.css';\nimport SocketHandler from './SocketHandler';\nimport LandPage from './LandPage';\nimport Fade from './Fade';\nimport Tone from 'tone';\n\nfunction App() {\n  const [landing, setLanding] = useState(true);\n  const [speak, setSpeak] = useState(false);\n  let selectStart= () => {\n    setLanding(false);\n    setSpeak(true);\n\n    //not sure where to put this...\n    window.speechSynthesis.speak(new SpeechSynthesisUtterance(''));\n    const synth = new Tone.Synth();\n    synth.oscillator.type = \"sine\";\n    synth.toMaster();\n    synth.triggerAttack(\"C4\");\n    setTimeout(()=>{synth.triggerRelease();}, 100);\n  }\n  return (\n  <div>\n    <Fade show={landing}>\n      <LandPage select={selectStart}/>\n    </Fade>\n    <Fade show={speak}>\n      <SocketHandler start={speak}/>\n    </Fade>\n    {/* <Speak /> */}\n  </div>);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/**\n * Converts an RGB color value to HSL. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and l in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSL representation\n */\nfunction rgbToHsl(r, g, b) {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  var max = Math.max(r, g, b), min = Math.min(r, g, b);\n  var h, s, l = (max + min) / 2;\n\n  if (max === min) {\n    h = s = 0; // achromatic\n  } else {\n    var d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n    switch (max) {\n      case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n      case g: h = (b - r) / d + 2; break;\n      case b: h = (r - g) / d + 4; break;\n      default: break;\n    }\n\n    h /= 6;\n  }\n\n  return {h:h, s:s, l:l};\n}\n\n/**\n * Converts an HSL color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n * Assumes h, s, and l are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  l       The lightness\n * @return  Array           The RGB representation\n */\nfunction hslToRgb(h, s, l) {\n  var r, g, b;\n\n  if (s == 0) {\n    r = g = b = l; // achromatic\n  } else {\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1/6) return p + (q - p) * 6 * t;\n      if (t < 1/2) return q;\n      if (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n      return p;\n    }\n\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n\n    r = hue2rgb(p, q, h + 1/3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1/3);\n  }\n\n  return {r:r * 255, g:g * 255, b:b * 255};\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nfunction rgbToHsv(r, g, b) {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  var max = Math.max(r, g, b), min = Math.min(r, g, b);\n  var h, s, v = max;\n\n  var d = max - min;\n  s = max === 0 ? 0 : d / max;\n\n  if (max === min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r: \n        h = (g - b) / d + (g < b ? 6 : 0); \n        break;\n      case g: \n        h = (b - r) / d + 2; \n        break;\n      case b: \n        h = (r - g) / d + 4; \n        break;\n      default:\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return { h:h, s:s, v:v };\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nfunction hsvToRgb(h, s, v) {\n  var r, g, b;\n\n  var i = Math.floor(h * 6);\n  var f = h * 6 - i;\n  var p = v * (1 - s);\n  var q = v * (1 - f * s);\n  var t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0: \n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1: \n      r = q;\n      g = v;\n      b = p; \n      break;\n    case 2: \n      r = p;\n      g = v;\n      b = t; \n      break;\n    case 3: \n      r = p;\n      g = q;\n      b = v; \n      break;\n    case 4: \n      r = t; \n      g = p;\n      b = v; \n      break;\n    case 5: \n      r = v;\n      g = p;\n      b = q; \n      break;\n    default:\n      break;\n  }\n\n  return {r:r * 255, g:g * 255, b:b * 255};\n}\n\nmodule.exports.hsvToRgb = hsvToRgb;\nmodule.exports.rgbToHsv = rgbToHsv;\nmodule.exports.hslToRgb = hslToRgb;\nmodule.exports.rgbToHsl = rgbToHsl;\n"],"sourceRoot":""}